// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  fullName  String
  role      UserRole
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  // Relations
  orders    Order[]

  @@map("users")
}

model Car {
  id          Int       @id @default(autoincrement())
  vin         String    @unique
  make        String
  model       String
  year        Int
  color       String
  price       Float
  quantity    Int
  supplierId  Int
  warehouseId Int

  // Relations
  supplier    Supplier  @relation(fields: [supplierId], references: [id])
  warehouse   Warehouse @relation(fields: [warehouseId], references: [id])
  orders      Order[]

  @@map("cars")
}

model Order {
  id         Int       @id @default(autoincrement())
  userId     Int
  carId      Int
  quantity   Int
  status     OrderStatus
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  // Relations
  user       User      @relation(fields: [userId], references: [id])
  car        Car       @relation(fields: [carId], references: [id])

  @@map("orders")
}

model Supplier {
  id        Int       @id @default(autoincrement())
  name      String
  contact   String
  email     String
  phone     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  // Relations
  cars      Car[]

  @@map("suppliers")
}

model Warehouse {
  id        Int       @id @default(autoincrement())
  name      String
  location  String
  capacity  Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  // Relations
  cars      Car[]

  @@map("warehouses")
}

enum UserRole {
  ADMIN
  MANAGER
  SALESPERSON
  CUSTOMER
}

enum OrderStatus {
  PENDING
  FULFILLED
  CANCELLED
}
